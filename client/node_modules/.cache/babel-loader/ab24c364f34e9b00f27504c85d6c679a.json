{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport hoistNonReactStatics_ from 'hoist-non-react-statics'; // Since rollup cannot deal with namespace being a function,\n// this is to interop with TypeScript since `invariant`\n// does not export a default\n// https://github.com/rollup/rollup/issues/1267\n\nvar hoistNonReactStatics = hoistNonReactStatics_.default || hoistNonReactStatics_;\nimport { invariantIntlContext } from '../utils';\n\nfunction getDisplayName(Component) {\n  return Component.displayName || Component.name || 'Component';\n} // TODO: We should provide initial value here\n\n\nvar IntlContext = React.createContext(null);\nvar IntlConsumer = IntlContext.Consumer,\n    IntlProvider = IntlContext.Provider;\nexport var Provider = IntlProvider;\nexport var Context = IntlContext;\nexport default function injectIntl(WrappedComponent, options) {\n  var _a = options || {},\n      _b = _a.intlPropName,\n      intlPropName = _b === void 0 ? 'intl' : _b,\n      _c = _a.forwardRef,\n      forwardRef = _c === void 0 ? false : _c,\n      _d = _a.enforceContext,\n      enforceContext = _d === void 0 ? true : _d;\n\n  var WithIntl = function (props) {\n    return React.createElement(IntlConsumer, null, function (intl) {\n      var _a;\n\n      if (enforceContext) {\n        invariantIntlContext(intl);\n      }\n\n      var intlProp = (_a = {}, _a[intlPropName] = intl, _a);\n      return React.createElement(WrappedComponent, __assign({}, props, intlProp, {\n        ref: forwardRef ? props.forwardedRef : null\n      }));\n    });\n  };\n\n  WithIntl.displayName = \"injectIntl(\" + getDisplayName(WrappedComponent) + \")\";\n  WithIntl.WrappedComponent = WrappedComponent;\n\n  if (forwardRef) {\n    return hoistNonReactStatics(React.forwardRef(function (props, ref) {\n      return React.createElement(WithIntl, __assign({}, props, {\n        forwardedRef: ref\n      }));\n    }), WrappedComponent);\n  }\n\n  return hoistNonReactStatics(WithIntl, WrappedComponent);\n}","map":{"version":3,"sources":["C:/Users/Skipk/du-bootcamp/budget-view/budget-view/client/node_modules/react-intl/lib/src/components/injectIntl.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","hoistNonReactStatics_","hoistNonReactStatics","default","invariantIntlContext","getDisplayName","Component","displayName","name","IntlContext","createContext","IntlConsumer","Consumer","IntlProvider","Provider","Context","injectIntl","WrappedComponent","options","_a","_b","intlPropName","_c","forwardRef","_d","enforceContext","WithIntl","props","createElement","intl","intlProp","ref","forwardedRef"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport hoistNonReactStatics_ from 'hoist-non-react-statics';\n// Since rollup cannot deal with namespace being a function,\n// this is to interop with TypeScript since `invariant`\n// does not export a default\n// https://github.com/rollup/rollup/issues/1267\nvar hoistNonReactStatics = hoistNonReactStatics_.default || hoistNonReactStatics_;\nimport { invariantIntlContext } from '../utils';\nfunction getDisplayName(Component) {\n    return Component.displayName || Component.name || 'Component';\n}\n// TODO: We should provide initial value here\nvar IntlContext = React.createContext(null);\nvar IntlConsumer = IntlContext.Consumer, IntlProvider = IntlContext.Provider;\nexport var Provider = IntlProvider;\nexport var Context = IntlContext;\nexport default function injectIntl(WrappedComponent, options) {\n    var _a = options || {}, _b = _a.intlPropName, intlPropName = _b === void 0 ? 'intl' : _b, _c = _a.forwardRef, forwardRef = _c === void 0 ? false : _c, _d = _a.enforceContext, enforceContext = _d === void 0 ? true : _d;\n    var WithIntl = function (props) { return (React.createElement(IntlConsumer, null, function (intl) {\n        var _a;\n        if (enforceContext) {\n            invariantIntlContext(intl);\n        }\n        var intlProp = (_a = {}, _a[intlPropName] = intl, _a);\n        return (React.createElement(WrappedComponent, __assign({}, props, intlProp, { ref: forwardRef ? props.forwardedRef : null })));\n    })); };\n    WithIntl.displayName = \"injectIntl(\" + getDisplayName(WrappedComponent) + \")\";\n    WithIntl.WrappedComponent = WrappedComponent;\n    if (forwardRef) {\n        return hoistNonReactStatics(React.forwardRef(function (props, ref) { return (React.createElement(WithIntl, __assign({}, props, { forwardedRef: ref }))); }), WrappedComponent);\n    }\n    return hoistNonReactStatics(WithIntl, WrappedComponent);\n}\n"]},"metadata":{},"sourceType":"module"}