{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nimport { IntlMessageFormat } from 'intl-messageformat';\nimport * as memoize from 'fast-memoize';\nimport { UnsupportedFormatterError } from './error';\nexport function filterProps(props, whitelist, defaults) {\n  if (defaults === void 0) {\n    defaults = {};\n  }\n\n  return whitelist.reduce(function (filtered, name) {\n    if (name in props) {\n      filtered[name] = props[name];\n    } else if (name in defaults) {\n      filtered[name] = defaults[name];\n    }\n\n    return filtered;\n  }, {});\n}\n\nvar defaultErrorHandler = function (error) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.error(error);\n  }\n};\n\nexport var DEFAULT_INTL_CONFIG = {\n  formats: {},\n  messages: {},\n  timeZone: undefined,\n  defaultLocale: 'en',\n  defaultFormats: {},\n  onError: defaultErrorHandler\n};\nexport function createIntlCache() {\n  return {\n    dateTime: {},\n    number: {},\n    message: {},\n    relativeTime: {},\n    pluralRules: {},\n    list: {},\n    displayNames: {}\n  };\n}\n\nfunction createFastMemoizeCache(store) {\n  return {\n    create: function () {\n      return {\n        has: function (key) {\n          return key in store;\n        },\n        get: function (key) {\n          return store[key];\n        },\n        set: function (key, value) {\n          store[key] = value;\n        }\n      };\n    }\n  };\n} // @ts-ignore this is to deal with rollup's default import shenanigans\n\n\nvar _memoizeIntl = memoize.default || memoize;\n\nvar memoizeIntl = _memoizeIntl;\n/**\n * Create intl formatters and populate cache\n * @param cache explicit cache to prevent leaking memory\n */\n\nexport function createFormatters(cache) {\n  if (cache === void 0) {\n    cache = createIntlCache();\n  }\n\n  var RelativeTimeFormat = Intl.RelativeTimeFormat;\n  var ListFormat = Intl.ListFormat;\n  var DisplayNames = Intl.DisplayNames;\n  var getDateTimeFormat = memoizeIntl(function () {\n    var _a;\n\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n  }, {\n    cache: createFastMemoizeCache(cache.dateTime),\n    strategy: memoizeIntl.strategies.variadic\n  });\n  var getNumberFormat = memoizeIntl(function () {\n    var _a;\n\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n  }, {\n    cache: createFastMemoizeCache(cache.number),\n    strategy: memoizeIntl.strategies.variadic\n  });\n  var getPluralRules = memoizeIntl(function () {\n    var _a;\n\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArrays([void 0], args)))();\n  }, {\n    cache: createFastMemoizeCache(cache.pluralRules),\n    strategy: memoizeIntl.strategies.variadic\n  });\n  return {\n    getDateTimeFormat: getDateTimeFormat,\n    getNumberFormat: getNumberFormat,\n    getMessageFormat: memoizeIntl(function (message, locales, overrideFormats, opts) {\n      return new IntlMessageFormat(message, locales, overrideFormats, __assign({\n        formatters: {\n          getNumberFormat: getNumberFormat,\n          getDateTimeFormat: getDateTimeFormat,\n          getPluralRules: getPluralRules\n        }\n      }, opts || {}));\n    }, {\n      cache: createFastMemoizeCache(cache.message),\n      strategy: memoizeIntl.strategies.variadic\n    }),\n    getRelativeTimeFormat: memoizeIntl(function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return new (RelativeTimeFormat.bind.apply(RelativeTimeFormat, __spreadArrays([void 0], args)))();\n    }, {\n      cache: createFastMemoizeCache(cache.relativeTime),\n      strategy: memoizeIntl.strategies.variadic\n    }),\n    getPluralRules: getPluralRules,\n    getListFormat: memoizeIntl(function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return new (ListFormat.bind.apply(ListFormat, __spreadArrays([void 0], args)))();\n    }, {\n      cache: createFastMemoizeCache(cache.list),\n      strategy: memoizeIntl.strategies.variadic\n    }),\n    getDisplayNames: memoizeIntl(function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return new (DisplayNames.bind.apply(DisplayNames, __spreadArrays([void 0], args)))();\n    }, {\n      cache: createFastMemoizeCache(cache.displayNames),\n      strategy: memoizeIntl.strategies.variadic\n    })\n  };\n}\nexport function getNamedFormat(formats, type, name, onError) {\n  var formatType = formats && formats[type];\n  var format;\n\n  if (formatType) {\n    format = formatType[name];\n  }\n\n  if (format) {\n    return format;\n  }\n\n  onError(new UnsupportedFormatterError(\"No \" + type + \" format named: \" + name));\n}","map":{"version":3,"sources":["C:/Users/Skipk/du-bootcamp/budget-view/budget-view/client/node_modules/@formatjs/intl/lib/src/utils.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__spreadArrays","il","r","Array","k","a","j","jl","IntlMessageFormat","memoize","UnsupportedFormatterError","filterProps","props","whitelist","defaults","reduce","filtered","name","defaultErrorHandler","error","process","env","NODE_ENV","console","DEFAULT_INTL_CONFIG","formats","messages","timeZone","undefined","defaultLocale","defaultFormats","onError","createIntlCache","dateTime","number","message","relativeTime","pluralRules","list","displayNames","createFastMemoizeCache","store","create","has","key","get","set","value","_memoizeIntl","default","memoizeIntl","createFormatters","cache","RelativeTimeFormat","Intl","ListFormat","DisplayNames","getDateTimeFormat","_a","args","_i","DateTimeFormat","bind","strategy","strategies","variadic","getNumberFormat","NumberFormat","getPluralRules","PluralRules","getMessageFormat","locales","overrideFormats","opts","formatters","getRelativeTimeFormat","getListFormat","getDisplayNames","getNamedFormat","type","formatType","format"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { IntlMessageFormat } from 'intl-messageformat';\nimport * as memoize from 'fast-memoize';\nimport { UnsupportedFormatterError } from './error';\nexport function filterProps(props, whitelist, defaults) {\n    if (defaults === void 0) { defaults = {}; }\n    return whitelist.reduce(function (filtered, name) {\n        if (name in props) {\n            filtered[name] = props[name];\n        }\n        else if (name in defaults) {\n            filtered[name] = defaults[name];\n        }\n        return filtered;\n    }, {});\n}\nvar defaultErrorHandler = function (error) {\n    if (process.env.NODE_ENV !== 'production') {\n        console.error(error);\n    }\n};\nexport var DEFAULT_INTL_CONFIG = {\n    formats: {},\n    messages: {},\n    timeZone: undefined,\n    defaultLocale: 'en',\n    defaultFormats: {},\n    onError: defaultErrorHandler,\n};\nexport function createIntlCache() {\n    return {\n        dateTime: {},\n        number: {},\n        message: {},\n        relativeTime: {},\n        pluralRules: {},\n        list: {},\n        displayNames: {},\n    };\n}\nfunction createFastMemoizeCache(store) {\n    return {\n        create: function () {\n            return {\n                has: function (key) {\n                    return key in store;\n                },\n                get: function (key) {\n                    return store[key];\n                },\n                set: function (key, value) {\n                    store[key] = value;\n                },\n            };\n        },\n    };\n}\n// @ts-ignore this is to deal with rollup's default import shenanigans\nvar _memoizeIntl = memoize.default || memoize;\nvar memoizeIntl = _memoizeIntl;\n/**\n * Create intl formatters and populate cache\n * @param cache explicit cache to prevent leaking memory\n */\nexport function createFormatters(cache) {\n    if (cache === void 0) { cache = createIntlCache(); }\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\n    var ListFormat = Intl.ListFormat;\n    var DisplayNames = Intl.DisplayNames;\n    var getDateTimeFormat = memoizeIntl(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n    }, {\n        cache: createFastMemoizeCache(cache.dateTime),\n        strategy: memoizeIntl.strategies.variadic,\n    });\n    var getNumberFormat = memoizeIntl(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n    }, {\n        cache: createFastMemoizeCache(cache.number),\n        strategy: memoizeIntl.strategies.variadic,\n    });\n    var getPluralRules = memoizeIntl(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArrays([void 0], args)))();\n    }, {\n        cache: createFastMemoizeCache(cache.pluralRules),\n        strategy: memoizeIntl.strategies.variadic,\n    });\n    return {\n        getDateTimeFormat: getDateTimeFormat,\n        getNumberFormat: getNumberFormat,\n        getMessageFormat: memoizeIntl(function (message, locales, overrideFormats, opts) {\n            return new IntlMessageFormat(message, locales, overrideFormats, __assign({ formatters: {\n                    getNumberFormat: getNumberFormat,\n                    getDateTimeFormat: getDateTimeFormat,\n                    getPluralRules: getPluralRules,\n                } }, (opts || {})));\n        }, {\n            cache: createFastMemoizeCache(cache.message),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getRelativeTimeFormat: memoizeIntl(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (RelativeTimeFormat.bind.apply(RelativeTimeFormat, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.relativeTime),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getPluralRules: getPluralRules,\n        getListFormat: memoizeIntl(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (ListFormat.bind.apply(ListFormat, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.list),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getDisplayNames: memoizeIntl(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (DisplayNames.bind.apply(DisplayNames, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.displayNames),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n    };\n}\nexport function getNamedFormat(formats, type, name, onError) {\n    var formatType = formats && formats[type];\n    var format;\n    if (formatType) {\n        format = formatType[name];\n    }\n    if (format) {\n        return format;\n    }\n    onError(new UnsupportedFormatterError(\"No \" + type + \" format named: \" + name));\n}\n"]},"metadata":{},"sourceType":"module"}