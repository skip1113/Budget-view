{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skipk\\\\du-bootcamp\\\\budget-view\\\\budget-view\\\\client\\\\src\\\\pages\\\\InfoLayout.js\";\nimport React, { useState } from 'react';\nimport Aside from './Aside';\nimport Info from './Info';\nexport function InfoLayout({\n  setLocale\n}) {\n  // const [rtl, setRtl] = useState(false);\n  const [collapsed, setCollapsed] = useState(false);\n  const [image, setImage] = useState(true);\n  const [toggled, setToggled] = useState(false);\n\n  const handleCollapsedChange = checked => {\n    setCollapsed(checked);\n  };\n\n  const handleRtlChange = checked => {\n    setRtl(checked);\n    setLocale(checked ? 'ar' : 'en');\n  };\n\n  const handleImageChange = checked => {\n    setImage(checked);\n  };\n\n  const handleToggleSidebar = value => {\n    setToggled(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `app ${rtl ? 'rtl' : ''} ${toggled ? 'toggled' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Aside, {\n    image: image,\n    collapsed: collapsed,\n    rtl: rtl,\n    toggled: toggled,\n    handleToggleSidebar: handleToggleSidebar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Info, {\n    image: image,\n    toggled: toggled,\n    collapsed: collapsed,\n    rtl: rtl,\n    handleToggleSidebar: handleToggleSidebar,\n    handleCollapsedChange: handleCollapsedChange,\n    handleRtlChange: handleRtlChange,\n    handleImageChange: handleImageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n}\nexport default InfoLayout;","map":{"version":3,"sources":["C:/Users/Skipk/du-bootcamp/budget-view/budget-view/client/src/pages/InfoLayout.js"],"names":["React","useState","Aside","Info","InfoLayout","setLocale","collapsed","setCollapsed","image","setImage","toggled","setToggled","handleCollapsedChange","checked","handleRtlChange","setRtl","handleImageChange","handleToggleSidebar","value","rtl"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAO,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAmC;AACxC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMW,qBAAqB,GAAIC,OAAD,IAAa;AACzCN,IAAAA,YAAY,CAACM,OAAD,CAAZ;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAID,OAAD,IAAa;AACnCE,IAAAA,MAAM,CAACF,OAAD,CAAN;AACAR,IAAAA,SAAS,CAACQ,OAAO,GAAG,IAAH,GAAU,IAAlB,CAAT;AACD,GAHD;;AAIA,QAAMG,iBAAiB,GAAIH,OAAD,IAAa;AACrCJ,IAAAA,QAAQ,CAACI,OAAD,CAAR;AACD,GAFD;;AAIA,QAAMI,mBAAmB,GAAIC,KAAD,IAAW;AACrCP,IAAAA,UAAU,CAACO,KAAD,CAAV;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAG,OAAMC,GAAG,GAAG,KAAH,GAAW,EAAG,IAAGT,OAAO,GAAG,SAAH,GAAe,EAAG,EAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEF,KADT;AAEE,IAAA,SAAS,EAAEF,SAFb;AAGE,IAAA,GAAG,EAAEa,GAHP;AAIE,IAAA,OAAO,EAAET,OAJX;AAKE,IAAA,mBAAmB,EAAEO,mBALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAET,KADT;AAEE,IAAA,OAAO,EAAEE,OAFX;AAGE,IAAA,SAAS,EAAEJ,SAHb;AAIE,IAAA,GAAG,EAAEa,GAJP;AAKE,IAAA,mBAAmB,EAAEF,mBALvB;AAME,IAAA,qBAAqB,EAAEL,qBANzB;AAOE,IAAA,eAAe,EAAEE,eAPnB;AAQE,IAAA,iBAAiB,EAAEE,iBARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAqBD;AAED,eAAeZ,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Aside from './Aside';\r\nimport Info from './Info';\r\n\r\nexport function InfoLayout({ setLocale }) {\r\n  // const [rtl, setRtl] = useState(false);\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [image, setImage] = useState(true);\r\n  const [toggled, setToggled] = useState(false);\r\n\r\n  const handleCollapsedChange = (checked) => {\r\n    setCollapsed(checked);\r\n  };\r\n\r\n  const handleRtlChange = (checked) => {\r\n    setRtl(checked);\r\n    setLocale(checked ? 'ar' : 'en');\r\n  };\r\n  const handleImageChange = (checked) => {\r\n    setImage(checked);\r\n  };\r\n\r\n  const handleToggleSidebar = (value) => {\r\n    setToggled(value);\r\n  };\r\n\r\n  return (\r\n    <div className={`app ${rtl ? 'rtl' : ''} ${toggled ? 'toggled' : ''}`}>\r\n      <Aside\r\n        image={image}\r\n        collapsed={collapsed}\r\n        rtl={rtl}\r\n        toggled={toggled}\r\n        handleToggleSidebar={handleToggleSidebar}\r\n      />\r\n      <Info\r\n        image={image}\r\n        toggled={toggled}\r\n        collapsed={collapsed}\r\n        rtl={rtl}\r\n        handleToggleSidebar={handleToggleSidebar}\r\n        handleCollapsedChange={handleCollapsedChange}\r\n        handleRtlChange={handleRtlChange}\r\n        handleImageChange={handleImageChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoLayout;"]},"metadata":{},"sourceType":"module"}